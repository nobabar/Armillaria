def divide_chunks(l, n):
    '''
    Parameters
    ----------
    l : list
        l is the list you want to divide into chunks.
    n : integer
        n is the size of the chunks the list will be divideed into.
    Yields
    ------
    list of lists
        the original list is now divided into chunks (other lists) of size n.
    '''
    for i in range(0, len(l), n):
        yield l[i:i + n]

def identify(ID, ):
    '''
    Parameters
    ----------
    list_distance : list
        this list is the one containg the hamming distances of all sequences.
    n_ref : integer
        n_ref is the number of reference sequences.
    no, nc, nb, nm, ng, nt : integer
        these integers are the number of each species contained among the references sequences.
    Returns
    -------
    specie : list
        this list contain the most probable specie identified for each file.
    '''
    list_distance = list(divide_chunks(list_distance, n_ref))
    specie_1 = []
    specie_2 = []
    for i in list_distance:
        index_1 = i.index(sorted(i)[0])
        if index_1 < no:
            specie_1.append(f"ostoyae {index_1}")
        if no <= index_1 < no+nc:
            specie_1.append(f"cepistipes {index_1}")
        if no+nc <= index_1 < no+nc+nb:
            specie_1.append(f"borealis {index_1}")
        if no+nc+nb <= index_1 < no+nc+nb+nm:
            specie_1.append(f"mellea {index_1}")
        if no+nc+nb+nm <= index_1 < no+nc+nb+nm+ng:
            specie_1.append(f"gallica {index_1}")
        if no+nc+nb+nm+ng <= index_1:
            specie_1.append(f"tabescens {index_1}")
        index_2 = i.index(sorted(i)[1])
        if index_2 < no:
            specie_2.append(f"ostoyae {index_2}")
        if no <= index_2 < no+nc:
            specie_2.append(f"cepistipes {index_2}")
        if no+nc <= index_2 < no+nc+nb:
            specie_2.append(f"borealis {index_2}")
        if no+nc+nb <= index_2 < no+nc+nb+nm:
            specie_2.append(f"mellea {index_2}")
        if no+nc+nb+nm <= index_2 < no+nc+nb+nm+ng:
            specie_2.append(f"gallica {index_2}")
        if no+nc+nb+nm+ng <= index_2:
            specie_2.append(f"tabescens {index_2}")
    return specie_1, specie_2

d = [156, 156, 155, 159, 161, 137, 142, 151, 144, 145, 142, 145, 136, 140, 152, 141, 137, 144, 143, 137, 142, 142, 141, 141, 136, 149, 134, 149, 149, 139, 140, 140, 140, 140, 135, 124, 145, 150, 144, 145, 234, 241, 239, 238, 240, 226, 222, 249, 243, 244, 220, 248, 220, 220, 248, 220, 217, 225, 223, 214, 224, 225, 223, 222, 216, 245, 220, 235, 235, 221, 221, 221, 221, 222, 227, 120, 219, 224, 221, 235, 151, 150, 150, 149, 150, 152, 151, 164, 155, 155, 151, 154, 150, 153, 167, 153, 150, 153, 153, 149, 152, 152, 151, 150, 150, 165, 148, 164, 164, 151, 151, 151, 151, 151, 150, 93, 147, 153, 150, 151, 172, 175, 177, 176, 178, 165, 142, 191, 177, 180, 142, 184, 146, 133, 184, 134, 141, 146, 143, 144, 145, 146, 144, 143, 139, 186, 154, 172, 170, 137, 138, 138, 139, 139, 166, 100, 157, 158, 177, 197, 155, 157, 159, 157, 158, 131, 115, 150, 131, 132, 115, 141, 130, 119, 156, 120, 117, 118, 115, 115, 115, 113, 111, 111, 117, 137, 123, 134, 134, 115, 115, 115, 116, 116, 126, 70, 132, 137, 151, 154, 64, 62, 63, 65, 66, 46, 46, 56, 47, 47, 46, 47, 45, 46, 58, 47, 47, 47, 46, 46, 46, 46, 45, 45, 45, 56, 43, 54, 54, 44, 44, 44, 44, 44, 44, 42, 54, 56, 55, 56, 40, 36, 37, 39, 40, 25, 25, 33, 25, 25, 25, 25, 24, 25, 36, 26, 26, 26, 25, 25, 24, 24, 24, 24, 23, 32, 23, 31, 31, 22, 23, 23, 23, 23, 23, 23, 31, 33, 33, 33, 147, 147, 148, 149, 150, 145, 121, 168, 154, 158, 123, 159, 123, 119, 168, 120, 120, 125, 123, 120, 122, 123, 123, 123, 118, 166, 132, 154, 152, 115, 115, 115, 115, 116, 146, 38, 127, 129, 143, 163, 96, 98, 100, 99, 101, 47, 46, 60, 48, 50, 48, 53, 53, 56, 73, 57, 51, 53, 52, 53, 53, 55, 54, 54, 57, 64, 50, 62, 62, 56, 56, 56, 57, 57, 52, 32, 75, 82, 79, 82, 54, 56, 58, 57, 59, 13, 13, 19, 12, 14, 13, 18, 4, 2, 11, 3, 12, 16, 13, 12, 13, 14, 12, 12, 9, 12, 10, 11, 11, 7, 7, 7, 8, 8, 11, 3, 31, 37, 36, 38, 53, 55, 57, 56, 58, 12, 12, 17, 11, 12, 12, 16, 3, 1, 9, 2, 11, 15, 12, 13, 12, 13, 11, 11, 8, 11, 9, 10, 10, 6, 6, 6, 7, 7, 10, 3, 32, 36, 35, 36, 53, 55, 57, 56, 58, 12, 12, 16, 11, 12, 12, 17, 3, 1, 9, 2, 11, 15, 12, 13, 12, 13, 11, 11, 8, 10, 9, 9, 9, 6, 6, 6, 7, 7, 10, 3, 32, 36, 35, 36, 53, 55, 57, 56, 58, 12, 12, 20, 11, 13, 12, 19, 3, 1, 12, 2, 11, 15, 12, 13, 12, 13, 11, 11, 8, 11, 9, 10, 10, 6, 6, 6, 7, 7, 10, 3, 32, 36, 35, 37, 54, 54, 56, 57, 59, 13, 13, 18, 12, 13, 13, 17, 4, 0, 8, 1, 12, 16, 13, 14, 13, 14, 12, 12, 9, 12, 10, 11, 11, 7, 7, 7, 8, 8, 11, 3, 33, 37, 36, 37, 54, 54, 56, 57, 59, 13, 13, 19, 12, 14, 13, 19, 4, 0, 10, 1, 12, 16, 13, 14, 13, 14, 12, 12, 9, 12, 10, 11, 11, 7, 7, 7, 8, 8, 11, 3, 33, 37, 36, 38, 76, 72, 74, 75, 77, 50, 40, 61, 50, 51, 40, 57, 35, 27, 52, 28, 39, 43, 40, 41, 40, 41, 39, 39, 36, 55, 43, 52, 52, 33, 33, 33, 34, 34, 48, 3, 52, 56, 63, 67, 60, 60, 62, 63, 65, 26, 19, 50, 30, 36, 19, 41, 14, 6, 40, 7, 18, 22, 19, 20, 19, 20, 17, 18, 15, 39, 20, 32, 32, 13, 13, 13, 14, 14, 25, 3, 39, 43, 47, 60, 52, 54, 56, 53, 55, 14, 14, 19, 13, 15, 14, 19, 8, 9, 17, 10, 13, 17, 14, 15, 14, 15, 13, 13, 10, 12, 11, 11, 11, 8, 8, 8, 9, 9, 12, 3, 29, 35, 34, 36, 60, 61, 63, 62, 64, 41, 19, 59, 43, 48, 19, 51, 25, 11, 54, 12, 18, 22, 19, 20, 19, 20, 18, 18, 14, 50, 30, 46, 44, 12, 12, 12, 13, 13, 40, 2, 40, 43, 61, 72, 62, 63, 65, 64, 66, 37, 22, 49, 40, 44, 22, 48, 25, 13, 43, 14, 21, 25, 22, 23, 22, 23, 21, 21, 16, 40, 30, 35, 33, 14, 14, 14, 15, 15, 36, 2, 42, 45, 56, 67, 90, 86, 88, 87, 89, 76, 58, 87, 80, 80, 58, 84, 59, 54, 86, 55, 54, 59, 57, 57, 57, 56, 56, 56, 55, 81, 65, 75, 73, 52, 52, 52, 53, 53, 73, 2, 67, 74, 87, 96, 51, 53, 55, 52, 54, 11, 11, 18, 10, 12, 11, 19, 5, 6, 17, 7, 10, 14, 11, 12, 11, 12, 10, 10, 7, 9, 8, 8, 8, 5, 5, 5, 6, 6, 9, 1, 28, 34, 33, 35, 56, 57, 59, 58, 60, 7, 7, 15, 6, 8, 7, 16, 9, 10, 21, 11, 8, 10, 7, 8, 7, 5, 2, 2, 10, 1, 0, 0, 0, 8, 8, 8, 9, 9, 1, 0, 35, 37, 36, 38, 53, 55, 57, 56, 58, 11, 11, 25, 10, 12, 11, 17, 6, 7, 24, 8, 10, 14, 11, 12, 11, 12, 10, 10, 6, 18, 8, 16, 16, 0, 0, 0, 1, 1, 9, 0, 32, 36, 35, 37]

